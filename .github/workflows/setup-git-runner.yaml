name: Setup GitHub Runner and Ansible

on:
  # workflow_run:
  #  workflows: ["Deploy Infrastructure"]
  #  types:
  #   - completed
  push:
    branches:
      - main

jobs:
  setup_runner:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install pulumi pulumi-aws

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          aws-region: us-east-1

      - name: Pulumi login
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: pulumi login

      - name: Pulumi stack select
        run:  |
          pulumi stack select amirul/aws-k3s-ansible/dev

      - name: Pulumi refresh
        run: |
          pulumi refresh --yes
      
      - name: Set public key as github env
        run: echo "PUBLIC_KEY=${{ secrets.PUBLIC_KEY }}" >> $GITHUB_ENV
      
      - name: Pulumi up
        run: |
          pulumi up --yes
      
      - name: Save Pulumi outputs
        id: pulumi_outputs
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          GIT_RUNNER_IP=$(pulumi stack output git_runner_public_ip)
          MASTER_IP=$(pulumi stack output master_private_ip)
          WORKER1_IP=$(pulumi stack output worker1_private_ip)
          WORKER2_IP=$(pulumi stack output worker2_private_ip)

          echo "GIT_RUNNER_IP=$GIT_RUNNER_IP" >> $GITHUB_ENV
          echo "MASTER_IP=$MASTER_IP" >> $GITHUB_ENV
          echo "WORKER1_IP=$WORKER1_IP" >> $GITHUB_ENV
          echo "WORKER2_IP=$WORKER2_IP" >> $GITHUB_ENV
      
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  

      - name: SSH to Runner EC2 and install GitHub Runner
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.GIT_RUNNER_IP }} << 'EOF'
          mkdir actions-runner && cd actions-runner
          curl -o actions-runner-linux-x64-2.319.1.tar.gz -L https://github.com/actions/runner/releases/download/v2.319.1/actions-runner-linux-x64-2.319.1.tar.gz
          echo "3f6efb7488a183e291fc2c62876e14c9ee732864173734facc85a1bfb1744464 actions-runner-linux-x64-2.319.1.tar.gz" | shasum -a 256 -c
          tar xzf ./actions-runner-linux-x64-2.319.1.tar.gz
          ./config.sh --unattended --url https://github.com/amirul1994/aws-k3s-ansible --token A4NFFE7XATOGR62KFSC7K7LGZCLM6 --name "Git-runner"